/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.Pedido;
import controlador.Venta;
import java.io.IOException;
import java.io.InputStreamReader;
import java.sql.Date;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import modelo.*;
import java.util.Properties;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author alumno
 */
public class MainVentana extends javax.swing.JFrame {

    Vector listEmp = new Vector();
    Vector filasEmp = new Vector();
    Persistencia p;
    Vector listPed = new Vector();
    Vector listaVentas = new Vector();
    int index;

    public void addPed(Vector ped) {
        this.listPed.add(ped);
    }

    /**
     * Creates new form MainVentana
     */
    public MainVentana() {
        JDialog i = new ControlUsuarios(this, true);
        i.setVisible(true);
        try {

            conectar();
            initComponents();
            setLocationRelativeTo(this);
            jTextFieldCodEmp.grabFocus();
            jButtonAcepEmpActionPerformed(null);

        } catch (IOException ex) {

            JOptionPane.showMessageDialog(this, "IOException");

        } catch (Exception ex) {

            JOptionPane.showMessageDialog(this, "Comprueba los parametros de acceso\n" + ex.getMessage(),
                    "ERROR FATAL", JOptionPane.ERROR_MESSAGE);
            System.exit(0);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenuEmpleados = new javax.swing.JPopupMenu();
        jMenuItemNuevoPedido = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItemDarBaja = new javax.swing.JMenuItem();
        jPopupMenuPedidos = new javax.swing.JPopupMenu();
        jMenuItemModificar = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuItemFinalizar = new javax.swing.JMenuItem();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelEmpleados = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldCodEmp = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableEmp = new javax.swing.JTable();
        jButtonAcepEmp = new javax.swing.JButton();
        jPanelPedidos = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablePed = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuMant = new javax.swing.JMenu();
        jMenuItemEmp = new javax.swing.JMenuItem();
        jMenuItemArt = new javax.swing.JMenuItem();
        jMenuItemCli = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItemSalir = new javax.swing.JMenuItem();
        jMenuStats = new javax.swing.JMenu();
        jMenuItemVentas = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        jMenuItemNuevoPedido.setText("Nuevo Pedido");
        jMenuItemNuevoPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNuevoPedidoActionPerformed(evt);
            }
        });
        jPopupMenuEmpleados.add(jMenuItemNuevoPedido);
        jPopupMenuEmpleados.add(jSeparator1);

        jMenuItemDarBaja.setText("Dar de Baja");
        jMenuItemDarBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDarBajaActionPerformed(evt);
            }
        });
        jPopupMenuEmpleados.add(jMenuItemDarBaja);

        jMenuItemModificar.setText("Modificar");
        jMenuItemModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemModificarActionPerformed(evt);
            }
        });
        jPopupMenuPedidos.add(jMenuItemModificar);
        jPopupMenuPedidos.add(jSeparator3);

        jMenuItemFinalizar.setText("Finalizar");
        jMenuItemFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFinalizarActionPerformed(evt);
            }
        });
        jPopupMenuPedidos.add(jMenuItemFinalizar);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jLabel1.setText("Código: ");

        jTextFieldCodEmp.setText("1");
        jTextFieldCodEmp.setPreferredSize(new java.awt.Dimension(150, 23));
        jTextFieldCodEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCodEmpActionPerformed(evt);
            }
        });

        jScrollPane1.setPreferredSize(new java.awt.Dimension(615, 190));

        jTableEmp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Apellidos", "", "Nombre", "Hora de Entrada"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableEmp.setComponentPopupMenu(jPopupMenuEmpleados);
        jTableEmp.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jTableEmp);

        jButtonAcepEmp.setText("Aceptar");
        jButtonAcepEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAcepEmpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelEmpleadosLayout = new javax.swing.GroupLayout(jPanelEmpleados);
        jPanelEmpleados.setLayout(jPanelEmpleadosLayout);
        jPanelEmpleadosLayout.setHorizontalGroup(
            jPanelEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEmpleadosLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanelEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addGroup(jPanelEmpleadosLayout.createSequentialGroup()
                        .addComponent(jTextFieldCodEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonAcepEmp)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanelEmpleadosLayout.setVerticalGroup(
            jPanelEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEmpleadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldCodEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAcepEmp))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Empleados", jPanelEmpleados);

        jScrollPane2.setPreferredSize(new java.awt.Dimension(615, 190));

        jTablePed.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Cliente", "Empleado", "Total"
            }
        ));
        jTablePed.setComponentPopupMenu(jPopupMenuPedidos);
        jTablePed.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(jTablePed);

        javax.swing.GroupLayout jPanelPedidosLayout = new javax.swing.GroupLayout(jPanelPedidos);
        jPanelPedidos.setLayout(jPanelPedidosLayout);
        jPanelPedidosLayout.setHorizontalGroup(
            jPanelPedidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPedidosLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanelPedidosLayout.setVerticalGroup(
            jPanelPedidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPedidosLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Pedidos", jPanelPedidos);

        jMenuMant.setMnemonic('m');
        jMenuMant.setText("Mantenimiento");

        jMenuItemEmp.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemEmp.setMnemonic('e');
        jMenuItemEmp.setText("Empleados");
        jMenuItemEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEmpActionPerformed(evt);
            }
        });
        jMenuMant.add(jMenuItemEmp);

        jMenuItemArt.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemArt.setMnemonic('a');
        jMenuItemArt.setText("Artículos");
        jMenuItemArt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemArtActionPerformed(evt);
            }
        });
        jMenuMant.add(jMenuItemArt);

        jMenuItemCli.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemCli.setMnemonic('c');
        jMenuItemCli.setText("Clientes");
        jMenuItemCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCliActionPerformed(evt);
            }
        });
        jMenuMant.add(jMenuItemCli);
        jMenuMant.add(jSeparator2);

        jMenuItemSalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemSalir.setMnemonic('s');
        jMenuItemSalir.setText("Salir");
        jMenuItemSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSalirActionPerformed(evt);
            }
        });
        jMenuMant.add(jMenuItemSalir);

        jMenuBar1.add(jMenuMant);

        jMenuStats.setMnemonic('E');
        jMenuStats.setText("Estadísticas");

        jMenuItemVentas.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemVentas.setMnemonic('v');
        jMenuItemVentas.setText("Ventas");
        jMenuItemVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemVentasActionPerformed(evt);
            }
        });
        jMenuStats.add(jMenuItemVentas);

        jMenuBar1.add(jMenuStats);

        jMenu1.setMnemonic('c');
        jMenu1.setText("Contabilidad");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setMnemonic('e');
        jMenuItem1.setText("Empleados");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEmpActionPerformed
        // TODO add your handling code here:

        JDialog emp = new Empleados(this, true);
        emp.setVisible(true);

    }//GEN-LAST:event_jMenuItemEmpActionPerformed

    private void jButtonAcepEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAcepEmpActionPerformed
        // TODO add your handling code here:

        if (validarCod()) {

            try {

                filasEmp = p.cargarEmp(Integer.parseInt(jTextFieldCodEmp.getText()));

            } catch (SQLException ex) {

                JOptionPane.showMessageDialog(this, ex.getMessage());

            }

            if (!filasEmp.isEmpty()) {

                DefaultTableModel dtm = (DefaultTableModel) jTableEmp.getModel();

                boolean rep = false;

                for (int i = 0; i < dtm.getRowCount(); i++) {

                    if (dtm.getValueAt(i, 0) == filasEmp.get(0)) {

                        rep = true;

                    }

                }

                if (!rep) {

                    Date date = new Date(System.currentTimeMillis());

                    String hora = new SimpleDateFormat("HH:mm").format(date);

                    filasEmp.add(hora);

                    dtm.addRow(filasEmp);

                    listEmp.add(filasEmp);

                } else {

                    JOptionPane.showMessageDialog(this, "El empleado ya está en el sistema", "ERROR", JOptionPane.WARNING_MESSAGE);

                }

            } else {

                JOptionPane.showMessageDialog(this, "El empleado con código: "
                        + jTextFieldCodEmp.getText() + " no existe", "ERROR",
                        JOptionPane.ERROR_MESSAGE);

            }
        } else {

            JOptionPane.showMessageDialog(this, "El código debe ser un número de máximo 6 dígitos",
                    "ERROR", JOptionPane.ERROR_MESSAGE);

        }

        jTextFieldCodEmp.setText(null);
        jTextFieldCodEmp.grabFocus();

    }//GEN-LAST:event_jButtonAcepEmpActionPerformed

    private void jMenuItemSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSalirActionPerformed
        // TODO add your handling code here:

        System.exit(0);

    }//GEN-LAST:event_jMenuItemSalirActionPerformed

    private void jMenuItemArtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemArtActionPerformed
        // TODO add your handling code here:

        JDialog art = new Articulos(this, true);
        art.setVisible(true);

    }//GEN-LAST:event_jMenuItemArtActionPerformed

    private void jMenuItemCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCliActionPerformed
        // TODO add your handling code here:

        JDialog cli = new Clientes(this, true, null);
        cli.setVisible(true);

    }//GEN-LAST:event_jMenuItemCliActionPerformed

    private void jMenuItemVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemVentasActionPerformed
        // TODO add your handling code here:

        JDialog i = new Ventas(this, true);
        i.setVisible(true);

    }//GEN-LAST:event_jMenuItemVentasActionPerformed

    private void jTextFieldCodEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCodEmpActionPerformed
        // TODO add your handling code here:

        jButtonAcepEmpActionPerformed(evt);

    }//GEN-LAST:event_jTextFieldCodEmpActionPerformed

    private void jMenuItemDarBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDarBajaActionPerformed
        // TODO add your handling code here:

        int row = jTableEmp.getSelectedRow();

        if (row >= 0) {

            DefaultTableModel dtm = (DefaultTableModel) jTableEmp.getModel();

            Vector emp = (Vector) listEmp.get(row);

            try {
                p.actualizarHoras(emp);
            } catch (SQLException ex) {
                Logger.getLogger(MainVentana.class.getName()).log(Level.SEVERE, null, ex);
            }

            dtm.removeRow(row);

            listEmp.remove(row);

        } else {

            JOptionPane.showMessageDialog(this, "Selecciona un empleado", "WARNING",
                    JOptionPane.WARNING_MESSAGE);

        }
    }//GEN-LAST:event_jMenuItemDarBajaActionPerformed

    private void jMenuItemNuevoPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNuevoPedidoActionPerformed
        // TODO add your handling code here:

        if (jTableEmp.getSelectedRow() >= 0) {

            Vector emp = (Vector) listEmp.get(jTableEmp.getSelectedRow());

            JDialog i = new Pedidos(this, true, String.valueOf(emp.get(0)));
            i.setVisible(true);

        } else {

            JOptionPane.showMessageDialog(this, "Selecciona un empleado", "WARNING",
                    JOptionPane.WARNING_MESSAGE);

        }

    }//GEN-LAST:event_jMenuItemNuevoPedidoActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        // TODO add your handling code here:

        if (jTabbedPane1.getSelectedIndex() == 1) {

            actualizarPed();

        }

    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void jMenuItemModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemModificarActionPerformed
        // TODO add your handling code here:

        int i = jTablePed.getSelectedRow();

        if (i >= 0) {

            index = i;

            Vector ped = (Vector) listPed.get(i);

            if (listaVentas.isEmpty()) {

                JOptionPane.showConfirmDialog(null, "Is empty?");

            }

            Pedidos p = new Pedidos(this, true, String.valueOf(ped.get(1)),
                    String.valueOf(ped.get(0)), String.valueOf(ped.get(2)), (Vector) listaVentas.get(i));

            p.setVisible(true);

        } else {

            JOptionPane.showMessageDialog(this, "Selecciona un pedido", "ERROR", JOptionPane.WARNING_MESSAGE);

        }

    }//GEN-LAST:event_jMenuItemModificarActionPerformed

    private void jMenuItemFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFinalizarActionPerformed
        // TODO add your handling code here:

        int i = jTablePed.getSelectedRow();

        if (i >= 0) {

            index = i;

            Vector ped = (Vector) listPed.get(jTablePed.getSelectedRow());

            int cli = Integer.parseInt(String.valueOf(ped.get(0)));

            int emp = Integer.parseInt(String.valueOf(ped.get(1)));

            Date fecha = new Date(System.currentTimeMillis());

            double total = Double.parseDouble(String.valueOf(ped.get(2)));

            Pedido pedido = new Pedido(cli, emp, fecha, total);

            try {
                p.guardarPedido(pedido);
            } catch (SQLException ex) {

                ex.printStackTrace();

            }

            Vector lisArt = (Vector) listaVentas.get(i);

            for (int j = 0; j < lisArt.size(); j++) {

                Vector art = (Vector) lisArt.get(j);

                int idArt = Integer.parseInt(String.valueOf(art.get(0)));
                int cant = Integer.parseInt(String.valueOf(art.get(3)));

                Venta v = new Venta(null, idArt, cant);
                try {
                    p.guardarVenta(v);
                } catch (SQLException ex) {

                    JOptionPane.showMessageDialog(this, ex.getMessage());

                }

            }

            borrarPed();

        } else {

            JOptionPane.showMessageDialog(this, "Selecciona un pedido", "ERROR", JOptionPane.WARNING_MESSAGE);

        }

    }//GEN-LAST:event_jMenuItemFinalizarActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:

        JDialog jd = new Contabilidad(this, true);

        jd.setVisible(true);

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainVentana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAcepEmp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItemArt;
    private javax.swing.JMenuItem jMenuItemCli;
    private javax.swing.JMenuItem jMenuItemDarBaja;
    private javax.swing.JMenuItem jMenuItemEmp;
    private javax.swing.JMenuItem jMenuItemFinalizar;
    private javax.swing.JMenuItem jMenuItemModificar;
    private javax.swing.JMenuItem jMenuItemNuevoPedido;
    private javax.swing.JMenuItem jMenuItemSalir;
    private javax.swing.JMenuItem jMenuItemVentas;
    private javax.swing.JMenu jMenuMant;
    private javax.swing.JMenu jMenuStats;
    private javax.swing.JPanel jPanelEmpleados;
    private javax.swing.JPanel jPanelPedidos;
    private javax.swing.JPopupMenu jPopupMenuEmpleados;
    private javax.swing.JPopupMenu jPopupMenuPedidos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableEmp;
    private javax.swing.JTable jTablePed;
    private javax.swing.JTextField jTextFieldCodEmp;
    // End of variables declaration//GEN-END:variables

    private void conectar() throws SQLException, IOException {

        Properties prop = new Properties();
        prop.load(new InputStreamReader(PersistenciaJDBC.class.getResourceAsStream("CFG.INI")));
        String s = prop.getProperty("tipoPersistencia").toLowerCase();

        switch (s) {

            case "mysqljdbc":
                p = new PersistenciaJDBC();
                break;

            case "hibernate":
                p = new PersistenciaHibernate();
                break;

            default:
                JOptionPane.showMessageDialog(this, "El tipo de persistencia no es válido (mysqlJDBC o Hibernate)",
                        "FATAL ERROR", JOptionPane.ERROR_MESSAGE);
                System.exit(0);

        }

    }

    void addlistaVentas(Vector ventas) {

        this.listaVentas.add(ventas);

    }

    private void actualizarPed() {

        Vector vTitColumn = new Vector();

        vTitColumn.add("Cliente");
        vTitColumn.add("Empleado");
        vTitColumn.add("Total");

        DefaultTableModel dtm = new DefaultTableModel(listPed, vTitColumn) {

            @Override
            public boolean isCellEditable(int row, int column) {

                return false;
            }

        };

        jTablePed.setModel(dtm);
        jTablePed.setSelectionMode(0);

    }

    void borrarPed() {

        listPed.remove(index);
        listaVentas.remove(index);
        actualizarPed();
    }

    private boolean validarCod() {

        boolean val = false;

        if (jTextFieldCodEmp.getText().matches("[0-9]{1,6}")) {

            val = true;

        }
        return val;
    }
}
